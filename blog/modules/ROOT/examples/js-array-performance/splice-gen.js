const process = require('process')
const assert = require('assert')
const Benchmark = require('benchmark')

if (process.env.PROTOTYPE_TAMPERING) {
  Object.setPrototypeOf(Array.prototype, {})
}

// test compatibility: https://github.com/tc39/test262/blob/e193b449d417c4fb7fc9b6f6b869fd55bca04372/implementation-contributed/v8/mjsunit/array-splice.js

// tag::splice-gen-function[]
function spliceGen (list, start, deleteCount) {
  if (deleteCount <= 0) {
    return []
  }
  var length = list.length

  var deleted = []
  var lastDeleteIndex = start + deleteCount
  for (var j = start; j < lastDeleteIndex && j < length; j += 1) {
    deleted.push(list[j])
  }

  var i = start
  for (var k = i + deleteCount, n = length; k < n; i += 1, k += 1) {
    list[i] = list[k]
  }

  list.length = i
  return deleted
}
/*
console.log(['a', 'b', 'c', 'd'].splice(0, 1))
console.log(spliceGen(['a', 'b', 'c', 'd'], 0, 1))


console.log(['a', 'b', 'c', 'd'].splice(0, 3))
console.log(spliceGen(['a', 'b', 'c', 'd'], 0, 3))

console.log(['a', 'b', 'c', 'd'].splice(0, 4))
console.log(spliceGen(['a', 'b', 'c', 'd'], 0, 4))

console.log(['a', 'b', 'c', 'd'].splice(1, 2))
console.log(spliceGen(['a', 'b', 'c', 'd'], 1, 2))

console.log(['a', 'b', 'c', 'd'].splice(2, 3))
console.log(spliceGen(['a', 'b', 'c', 'd'], 2, 3))

console.log(['a', 'b', 'c', 'd'].splice(3, 1))
console.log(spliceGen(['a', 'b', 'c', 'd'], 3, 1))

console.log(['a', 'b', 'c', 'd'].splice(4, 1))
console.log(spliceGen(['a', 'b', 'c', 'd'], 4, 1))

console.log(['a', 'b', 'c', 'd'].splice(5, 1))
console.log(spliceGen(['a', 'b', 'c', 'd'], 5, 1))

console.log(['a', 'b', 'c', 'd'].splice(0, -1))
console.log(spliceGen(['a', 'b', 'c', 'd'], 0, -1))
 */

// end::splice-gen-function[]

function pop(list, count) {
  if (count === 1) {
    list.pop()
  } else if (count > list.length) {
    list.splice(0, list.length)
  } else {
    list.splice(list.length - count, list.length)
  }
}

function popGen(list, count) {
  if (count === 1) {
    list.pop()
  } else if (count > list.length) {
    spliceGen(list, 0, list.length)
  } else {
    spliceGen(list, list.length - count, list.length)
  }
}
const suite = new Benchmark.Suite
suite
  .add('clone splice(0, 100)', () => {
    // clone
    [
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ].splice(0, 100)
  })
  .add('clone spliceGen', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 0, 100)
  })
  .on('cycle', function (event) {
    console.log(String(event.target))
  })
  .run({ 'async': true })

/*
const suite = new Benchmark.Suite
suite
  .add('pop 101', () => {
    pop([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 101)
  })
  .add('pop 100', () => {
    pop([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 100)
  })
  .add('pop 99', () => {
    pop([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 99)
  })
  .add('pop 1', () => {
    pop([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 1)
  })
  .add('popGen 101', () => {
    popGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 101)
  })
  .add('popGen 100', () => {
    popGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 100)
  })
  .add('popGen 99', () => {
    popGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 99)
  })
  .add('popGen 1', () => {
    popGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 1)
  })
  .on('cycle', function (event) {
    console.log(String(event.target))
  })
  .run({ 'async': true })
*/

/*
const arr1 = [
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
]
spliceGen(arr1, 0, 100)
console.log(arr1)

const arr2 = [
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '99', '100',
]
spliceGen(arr2, 0, 99)
console.log(arr2)

const arr3 = [
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '99', '100',
]
spliceGen(arr3, 1, 98)
console.log(arr3)

const arr4 = [
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
  '1', '2', '3', '4', '5', '6', '7', '8', '9', '100',
]
spliceGen(arr4, 1, 99)
console.log(arr4)
 */
/*
const suite = new Benchmark.Suite
suite
  .add('spliceGen 100', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 0, 100)
  })
  .add('spliceGen 99', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 0, 99)
  })
  .add('spliceGen 10', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'
    ], 0, 10)
  })
  .add('spliceGen 9', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'
    ], 0, 9)
  })
  .add('spliceGen 1', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'
    ], 0, 1)
  })
  .add('spliceGen 100 - del: 1', () => {
    spliceGen([
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ], 0, 1)
  })
  .add('Array#splice 100', () => {
    [
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ].splice(0, 100)
  })
  .add('Array#splice 99', () => {
    [
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
    ].splice(0, 99)
  })
  .add('Array#splice 10', () => {
    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'].splice(0, 10)
  })
  .add('Array#splice 9', () => {
    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'].splice(0, 9)
  })
  .add('Array#splice 1', () => {
    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'].splice(0, 1)
  })
  .add('Array#splice 100 - del: 1', () => {
    [
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', '100',
    ].splice(0, 1)
  })
  .on('cycle', function (event) {
    console.log(String(event.target))
  })
  .run({ 'async': true })
*/

/*
const suite = new Benchmark.Suite
suite
  .add('spliceGen', () => {
    spliceGen(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], 0, 2)
  })
  .add('Array#splice', () => {
    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'].splice(0, 2)
  })
  .on('cycle', function (event) {
    console.log(String(event.target))
  })
  .run({ 'async': true })
*/
